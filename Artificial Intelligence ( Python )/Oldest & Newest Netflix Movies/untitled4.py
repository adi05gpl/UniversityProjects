# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Josfy6_s6O-c3wigaoTzSC3uQ-yX2kF0
"""

import numpy as np
import pandas as pd
import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

df = pd.read_csv("netflix_titles.csv")
df.head()

df.shape

df.info()

df.isnull().sum()

df.nunique()

import seaborn as sns
import matplotlib.pyplot as plt

import missingno as msno

msno.heatmap(df)

df[df['rating'].isna()]

df.isnull().sum()

changing_nan = {
    67: 'TV-PG',
    2359: 'TV-14',
    3660: 'TV-MA',
    3736: 'TV-MA',
    3737: 'NR',
    3738: 'TV-MA',
    4323: 'TV-MA '
}

for id, rate in changing_nan.items():
    df.iloc[id, 6] = rate

df.isnull().sum()

#Scoatem valorile nule din cast!
df = df[df['cast'].notna()]
df['cast'].isna().sum()

import collections
collections.Counter(df['country']).most_common(1)

df['country'] = df['country'].fillna('United States')
df['country'].isna().sum()

df.isnull().sum()

df.head()

df.shape

import pandas as pd
!pip install AutoViz
from autoviz.AutoViz_Class import AutoViz_Class

pip install xlrd

from autoviz.AutoViz_Class import AutoViz_Class

autoviz = AutoViz_Class().AutoViz("netflix_titles.csv")

#Which are the top oldest movies on Nextflix!??
old = df.sort_values("release_year", ascending = True)
old = old[old['duration'] != ""]
old = old[old['type'] !="TV Show"]
old[['title', "release_year","country","duration"]][:15]

#Which are the top Newest movies on Nextflix!??
old = df.sort_values("release_year", ascending = False)
old = old[old['duration'] != ""]
old = old[old['type'] !="TV Show"]
old[['title', "release_year","country","duration"]][:15]

import plotly.express as px
#Country wise representation of all Movies!
country  = df['country'].value_counts()
country = country[:15,]
fig = px.bar(x=country.index, y=country.values, color=country.values,
             hover_data=[country.index, country.values],labels={'country':'Frequency'}, height=400)
fig.show()

from sklearn.feature_extraction.text import TfidfVectorizer
tfv = TfidfVectorizer(min_df = 3,max_features = None,analyzer = 'word',token_pattern = 'r\w{1,}', ngram_range = (1,3), stop_words = 'english')

df.head()

df['combined'] = df['description']+df['cast']+df['director']
df.head(5)

df['combined'] = df['combined'].fillna("")

tfv_matrix = tfv.fit_transform(df['combined'])
from sklearn.metrics.pairwise import sigmoid_kernel
sig = sigmoid_kernel(tfv_matrix,tfv_matrix)
sig[0]
indices = pd.Series(df.index,index = df['title']).drop_duplicates()
indices

def recommend(title,sig=sig):
    idx = indices[title]
    sig_scores = list(enumerate(sig[idx]))
    sig_scores = sorted(sig_scores,key = lambda x:x[1], reverse = True)
    sig_scores = sig_scores[1:11]
    movies_indices = [i[0] for i in sig_scores]
    return df['title'].iloc[movies_indices]

recommend("Payday")

recommend('Inside Man: Most Wanted')